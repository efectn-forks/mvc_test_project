@using mvc_proje.Domain.Entities
@model mvc_proje.Application.Dtos.Post.PostShowDto

@{
    var userId = User.Claims.FirstOrDefault(c => c.Type == "UserId")?.Value;
    var userIdInt = string.IsNullOrEmpty(userId) ? 0 : int.Parse(userId);
}

<style>
    .blog-content img {
        border-radius: 12px;
        margin: 20px 0;
    }

    .blog-content p {
        margin-bottom: 20px;
        line-height: 1.8;
        color: #444;
    }

    .blog-content h3 {
        margin-top: 30px;
        margin-bottom: 15px;
        color: #3a7d34;
    }

    .author-card {
        border-radius: 12px;
        padding: 25px;
        background-color: #f9f9f9;
        border-top: 3px solid #3a7d34;
    }

    .related-post {
        transition: transform 0.3s ease;
    }

    .related-post:hover {
        transform: translateY(-5px);
    }

    .share-buttons a {
        width: 40px;
        height: 40px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        margin-right: 8px;
        background: #f1f1f1;
        color: #555;
        transition: all 0.3s;
    }

    .share-buttons a:hover {
        transform: translateY(-3px);
    }

    .tag-badge {
        background: #e8f5e9;
        color: #3a7d34;
        padding: 6px 12px;
        border-radius: 20px;
        margin-right: 8px;
        margin-bottom: 8px;
        display: inline-block;
        transition: all 0.3s;
    }

    .tag-badge:hover {
        background: #3a7d34;
        color: white;
    }
</style>

<!-- Page Header Start -->
<div class="container-fluid page-header py-5 mb-5 wow fadeIn" data-wow-delay="0.1s">
    <div class="container text-center py-5">
        <h1 class="display-3 text-white mb-4 animated slideInDown">@Model.Post.Title</h1>
        <nav aria-label="breadcrumb animated slideInDown">
            <ol class="breadcrumb justify-content-center mb-0">
                <li class="breadcrumb-item"><a class="text-white" asp-controller="Homepage" asp-action="Index">Home</a>
                </li>
                <li class="breadcrumb-item"><a class="text-white" asp-controller="Homepage" asp-action="Blog">Blog</a>
                </li>
                <li class="breadcrumb-item text-white active" aria-current="page">@Model.Post.Title</li>
            </ol>
        </nav>
    </div>
</div>
<!-- Page Header End -->


<!-- Blog Content Start -->
<div class="container-xxl py-5">
    <div class="container">
        <div class="row g-5">
            <div class="col-lg-8">
                <!-- Blog Detail Start -->
                <div class="mb-5">
                    <img class="img-fluid w-100 rounded mb-5"
                         src="@Url.Content(Model.Post.ImageUrl)"
                         alt="@Model.Post.Title">
                    <div class="d-flex mb-4">
                        <div class="d-flex align-items-center">
                            <img class="rounded-circle"
                                 src="@(string.IsNullOrEmpty(Model.Post.User.AvatarUrl) ? "https://via.placeholder.com/150" : Url.Content(Model.Post.User.AvatarUrl))"
                                 alt="Author" style="width: 50px; height: 50px;">
                            <div class="ps-3">
                                <h6 class="mb-1"><a asp-controller="Profile" asp-action="UserProfile" asp-route-username="@Model.Post.User.Username">@Model.Post.User.FullName</a></h6>
                                <small class="text-body"><i
                                        class="fa fa-calendar text-primary me-2"></i>@Model.Post.CreatedAt.ToShortDateString()
                                </small>
                            </div>
                        </div>
                    </div>

                    <h1 class="mb-4">@Model.Post.Title</h1>

                    <div class="blog-content">
                        @Html.Raw(Model.Post.Content)
                    </div>

                    <div class="mt-5">
                        <h4 class="mb-3">Tags</h4>
                        <div class="d-flex flex-wrap">
                            @foreach (var tag in Model.Post.Tags)
                            {
                                <a asp-controller="Homepage" asp-action="Tag" asp-route-id="@tag.Id"
                                   class="tag-badge me-2 mb-2">@tag.Name</a>
                            }
                        </div>
                    </div>

                    <div class="share-buttons mt-5 pt-4 border-top">
                        <h4 class="mb-3">Share This Post</h4>
                        <a href="#" class="btn btn-lg btn-primary rounded-circle me-2"><i
                                class="fab fa-facebook-f"></i></a>
                        <a href="#" class="btn btn-lg btn-info rounded-circle me-2"><i
                                class="fab fa-twitter"></i></a>
                        <a href="#" class="btn btn-lg btn-danger rounded-circle me-2"><i
                                class="fab fa-pinterest"></i></a>
                        <a href="#" class="btn btn-lg btn-primary rounded-circle me-2"><i
                                class="fab fa-linkedin-in"></i></a>
                        <a href="#" class="btn btn-lg btn-success rounded-circle me-2"><i
                                class="fab fa-whatsapp"></i></a>
                    </div>
                </div>
                <!-- Blog Detail End -->

                <!-- Author Bio Start -->
                <div class="author-card wow fadeInUp" data-wow-delay="0.1s">
                    <div class="d-flex align-items-center mb-4">
                        <img class="img-fluid rounded-circle"
                             src="@(string.IsNullOrEmpty(Model.Post.User.AvatarUrl) ? "https://via.placeholder.com/150" : Url.Content(Model.Post.User.AvatarUrl))"
                             alt="Author" style="width: 100px; height: 100px;">
                        <div class="ps-4">
                            <h4 class="mb-1"><a asp-controller="Profile" asp-action="UserProfile" asp-route-username="@Model.Post.User.Username">@Model.Post.User.FullName</a></h4>
                            <p class="text-primary mb-2">@Model.Post.User.Role</p>
                        </div>
                    </div>
                    <div class="d-flex">
                        <a class="btn btn-square rounded-circle me-2" href="#"><i class="fab fa-facebook-f"></i></a>
                        <a class="btn btn-square rounded-circle me-2" href="#"><i class="fab fa-twitter"></i></a>
                        <a class="btn btn-square rounded-circle me-2" href="#"><i class="fab fa-instagram"></i></a>
                        <a class="btn btn-square rounded-circle me-0" href="#"><i
                                class="fab fa-linkedin-in"></i></a>
                    </div>
                </div>
                <!-- Author Bio End -->

                <!-- Comments Start -->
                <div class="wow fadeInUp mt-5" data-wow-delay="0.1s">
                    <h3 class="mb-4">@Model.Comments.Comments.Count Comments</h3>
                    @{
                        async Task printChildrenComments(List<Comment> children)
                        {
                            foreach (var comment in children)
                            {
                                <div class="d-flex mb-4">
                                    <img
                                        src="@Url.Content(comment.User.AvatarUrl)"
                                        class="img-fluid rounded-circle flex-shrink-0" alt="@comment.User.Username"
                                        style="width: 45px; height: 45px;">
                                    <div class="ps-3">
                                        <h6><a href="">@comment.User.Username</a>
                                            <small><i>@comment.CreatedAt.ToShortDateString() @(comment.CreatedAt != comment.UpdatedAt ? "(updated)" : "") </i></small>
                                        </h6>
                                        <p class="mb-1">@comment.Text</p>
                                        <a class="btn btn-sm btn-link reply-btn" data-comment-id="@comment.Id"
                                           href="#make-comment">Reply</a>
                                        @if (comment.User.Id == userIdInt)
                                        {
                                            <a class="btn btn-sm btn-link"
                                               asp-controller="Homepage" asp-action="EditComment"
                                               asp-route-id="@comment.Id">Edit</a>
                                        }
                                    </div>
                                </div>

                                if (comment.Children != null && comment.Children.Count > 0)
                                {
                                    <div class="ms-5">
                                        @{ await printChildrenComments(comment.Children); }
                                    </div>
                                }
                            }
                        }

                        await printChildrenComments(Model.Comments.Comments);
                    }
                </div>
                <!-- Comments End -->

                <!-- Comment Form Start -->
                <div class="wow fadeInUp mt-5" data-wow-delay="0.1s" id="make-comment">
                    <h3 class="mb-4">Leave a comment</h3>
                    <form asp-controller="Homepage" asp-action="MakeComment" asp-antiforgery="true">
                        <input type="hidden" name="postId" value="@Model.Post.Id">
                        <input type="hidden" name="parentId" id="parentId" value="0">

                        <div class="row g-3">
                            <div class="col-12">
                                <div class="form-floating">
                                    <textarea class="form-control" placeholder="Leave a message here" id="message"
                                              style="height: 150px" name="text"></textarea>
                                    <label for="message">Message</label>
                                </div>
                            </div>
                            <div class="col-12">
                                <button class="btn btn-primary rounded-pill py-3 px-5" type="submit">Send
                                    Message
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
                <!-- Comment Form End -->
            </div>

            @await Component.InvokeAsync("Sidebar")
        </div>
    </div>
</div>
<!-- Blog Content End -->

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const replyButtons = document.querySelectorAll(".reply-btn");
        const parentInput = document.getElementById("parentId");

        replyButtons.forEach(btn => {
            btn.addEventListener("click", function () {
                const commentId = this.getAttribute("data-comment-id");
                parentInput.value = commentId;
            });
        });
    });
</script>
