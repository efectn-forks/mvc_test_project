@using System.Text.Json
@using System.Text.Json.Serialization
@using mvc_proje.Application.Dtos.Admin.Category
@using mvc_proje.Domain.Entities
@{
  Layout = "_AdminLayout";
  var options = ViewData["ProductOptions"] as List<ProductOption>;
}

@model mvc_proje.Application.Dtos.Admin.Product.ProductEditDto

@await Html.PartialAsync("_Editor")

<style>
  .main-selected {
    border: 3px solid green;
  }

  .btn-main {
    display: block;
    margin-top: 5px;
    background: orange;
    color: white;
    border: none;
    padding: 3px 8px;
    cursor: pointer;
  }
</style>
<!--end::App Content Header-->
<!--begin::App Content-->
<div class="app-content">
  <!--begin::Container-->
  <div class="container-fluid">
    <!--begin::Row-->
    <div class="row">
      <div class="col-md-12">
        <div class="card mb-8">
          <div class="card card-primary card-outline mb-4">
            <!--begin::Form-->
            <form method="post" asp-action="Update" asp-controller="Product" asp-antiforgery="true"
                  enctype="multipart/form-data" id="myForm">
              <input type="hidden" asp-for="Id" value="@Model.Id"/>
              <!--begin::Body-->
              <div class="card-body">
                <div class="mb-3">
                  <label for="name" class="form-label">İsim</label>
                  <input
                    type="text"
                    name="name"
                    class="form-control"
                    value="@Model.Name"
                    id="name"/>
                </div>

                <div class="mb-3">
                  <label for="slug" class="form-label">Slug</label>
                  <input
                    type="text"
                    name="slug"
                    class="form-control"
                    value="@Model.Slug"
                    id="slug"/>
                </div>

                <div class="mb-3">
                  <label for="description" class="form-label">Açıklama</label>
                  <textarea class="form-control" name="description" id="description">@Model.Description</textarea>
                </div>

                <div class="mb-3">
                  <label for="summernote" class="form-label">İçerik</label>
                  <textarea class="form-control" asp-for="Content" id="summernote"></textarea>
                </div>

                <div class="mb-3">
                  <label for="CategoryId" class="form-label">Kategori</label>
                  <select class="form-select" name="CategoryId" id="CategoryId" aria-label="Default select example">
                    @foreach (var category in (ViewData["categories"] as CategoryIndexDto).Categories)
                    {
                      var selected = Model.CategoryId == category.Id ? "selected" : "";


                      <option value="@category.Id" selected="@selected">@category.Name</option>
                    }
                  </select>
                </div>

                <input type="file" id="realFileInput" name="files" multiple hidden/>
                <input type="hidden" id="MainExistingImageId" name="MainExistingImageId"/>
                <input type="hidden" id="MainNewFileIndex" name="MainNewFileIndex"/>

                <div id="dropzone" class="dropzone"></div>

                @if (Model.IsVarianted)
                {
                  <div id="variantContainer">
                    @for (int i = 0; i < Model.Variants.Count; i++)
                    {
                      var variant = Model.Variants[i];
                      <div class="variant-block border p-3 mb-3" data-index="@i">
                        <button type="button" class="btn-close float-end remove-variant"></button>
                        <input type="hidden" name="Variants[@i].Id" value="@variant.Id"/>
                        <div class="mb-2">
                          <label>SKU</label>
                          <input type="text" class="form-control variant-sku" name="Variants[@i].SkuNumber"
                                 value="@variant.SkuNumber"/>
                        </div>
                        <div class="mb-2">
                          <label>Fiyat</label>
                          <input type="text" class="form-control variant-price" name="Variants[@i].Price"
                                 value="@variant.Price"/>
                        </div>
                        <div class="options-container">
                          @for (int j = 0; j < variant.OptionValueIds.Count; j++)
                          {
                            <div class="option-block mb-2">
                              <button type="button" class="btn-close float-end remove-option"></button>
                              <select class="form-select option-select" name="Variants[@i].OptionValueIds[@j]">
                                <option value="">Seçiniz</option>
                                @foreach (var option in options)
                                {
                                  <optgroup label="@option.Name">
                                    @foreach (var val in option.Values)
                                    {
                                      var selected = val.Id == variant.OptionValueIds[j] ? "selected" : "";
                                      if (selected == "selected")
                                      {
                                        <option value="@val.Id" selected="@selected">@val.Value</option>
                                      }
                                      else
                                      {
                                        <option value="@val.Id">@val.Value</option>
                                      }
                                    }
                                  </optgroup>
                                }
                              </select>
                            </div>
                          }
                        </div>
                        <button type="button" class="btn btn-sm btn-outline-primary add-option">Option Ekle</button>
                      </div>
                    }
                  </div>

                  <button type="button" id="addVariantBtn" class="btn btn-secondary mt-2">Yeni Varyant Ekle</button>
                }
                else
                {
                  <div class="mb-3">
                    <label for="SkuNumber" class="form-label">SKU</label>
                    <input type="text" class="form-control" name="SkuNumber" id="SkuNumber" value="@Model.SkuNumber" />
                  </div>
                  
                  <div class="mb-3">
                    <label for="Price" class="form-label">Fiyat</label>
                    <input type="text" class="form-control" name="Price" id="Price" value="@Model.Price" />
                  </div>
                }
                <template id="variantTemplate">
                  <div class="variant-block border p-3 mb-3" data-index="">
                    <button type="button" class="btn-close float-end remove-variant"></button>
                    <div class="mb-2">
                      <label>SKU</label>
                      <input type="text" class="form-control variant-sku" name=""/>
                    </div>
                    <div class="mb-2">
                      <label>Fiyat</label>
                      <input type="text" class="form-control variant-price" name=""/>
                    </div>
                    <div class="mb-2">
                      <label>Stok</label>
                      <input type="number" class="form-control variant-stock" name=""/>
                    </div>
                    <div class="options-container"></div>
                    <button type="button" class="btn btn-sm btn-outline-primary add-option">Option Ekle</button>
                  </div>
                </template>

                <template id="optionTemplate">
                  <div class="option-block mb-2">
                    <button type="button" class="btn-close float-end remove-option"></button>
                    <select class="form-select option-select" name="">
                      <option value="">Seçiniz</option>
                      @foreach (var option in options)
                      {
                        <optgroup label="@option.Name">
                          @foreach (var val in option.Values)
                          {
                            <option value="@val.Id">@val.Value</option>
                          }
                        </optgroup>
                      }
                    </select>
                  </div>
                </template>
              </div>
              <!--end::Body-->
              <!--begin::Footer-->
              <div class="card-footer">
                <button type="submit" class="btn btn-primary">Gönder</button>
              </div>
              <!--end::Footer-->
            </form>
            <!--end::Form-->
          </div>
        </div>
      </div>
    </div>

    <div class="row mt-3">
      <div class="col-md-12">
        <div class="card mb-8">
          <div class="card card-primary card-outline mb-4">
            <div class="card-header">
              <h3 class="card-title">Ürün Özellikleri</h3>
            </div>

            <div class="card-body">
              <table class="table table-bordered">
                <thead>
                <tr>
                  <th style="width: 10px">#</th>
                  <th>Anahtar</th>
                  <th>Değer</th>
                  <th style="width: 80px">İşlemler</th>
                </tr>
                </thead>
                <tbody>

                @foreach (var feature in Model.ProductFeatures)
                {
                  <tr class="align-middle">
                    <td>@feature.Id</td>
                    <td>@feature.Key</td>
                    <td>@feature.Value</td>
                    <td>
                      <p class="d-inline-flex gap-1">
                        <a type="submit" asp-controller="ProductFeature" asp-action="Delete" asp-route-id="@feature.Id"
                           class="btn btn-sm btn-danger">Sil</a>
                      </p>
                    </td>
                  </tr>
                }
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="row mt-3">
      <div class="col-md-12">
        <div class="card mb-8">
          <div class="card card-primary card-outline mb-4">
            <div class="card-header">
              <h3 class="card-title">Ürün Özelliği Ekle</h3>
            </div>

            <div class="card-body">
              <form method="post" asp-action="Create" asp-controller="ProductFeature" asp-antiforgery="true">
                <input type="hidden" name="ProductId" value="@Model.Id"/>
                <!--begin::Body-->
                <div class="card-body">
                  <div class="mb-3">
                    <label for="Key" class="form-label">Anahtar</label>
                    <input
                      type="text"
                      name="Key"
                      class="form-control"
                      id="Key"/>
                  </div>

                  <div class="mb-3">
                    <label for="Value" class="form-label">Değer</label>
                    <input
                      type="text"
                      name="Value"
                      class="form-control"
                      id="Value"/>
                  </div>
                </div>
                <!--end::Body-->
                <!--begin::Footer-->
                <div class="card-footer">
                  <button type="submit" class="btn btn-primary">Gönder</button>
                </div>
                <!--end::Footer-->
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="row mt-3">
      <div class="col-md-12">
        <div class="card mb-8">
          <div class="card card-primary card-outline mb-4">
            <div class="card-header">
              <h3 class="card-title">Stok Takibi</h3>
            </div>

            <div class="card-body">

              <p>Güncel Stok: @Model.Stock</p>

              <table class="table table-bordered">
                <thead>
                <tr>
                  <th style="width: 10px">#</th>
                  <th>İşlem Türü</th>
                  <th>Değişim</th>
                  <th>Açıklama</th>
                  <th>Oluşturulma Tarihi</th>
                  <th style="width: 80px">İşlemler</th>
                </tr>
                </thead>
                <tbody>

                @foreach (var transaction in Model.StockTransactions.Items)
                {
                  <tr class="align-middle">
                    <td>@transaction.Id</td>
                    <td>@transaction.TransactionType</td>
                    <td>@transaction.Change</td>
                    <td>@transaction.Description.Substring(0, Math.Min(transaction.Description.Length, 50))</td>
                    <td>@transaction.CreatedAt.ToString("dd.MM.yyyy HH:mm")</td>
                    <td>
                      <p class="d-inline-flex gap-1">
                        <a type="submit" asp-controller="StockTransaction" asp-action="Delete"
                           asp-route-id="@transaction.Id"
                           class="btn btn-sm btn-danger">Sil</a>
                      </p>
                    </td>
                  </tr>
                }
                </tbody>
              </table>

              @await Html.PartialAsync("_Pagination")
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="row mt-3">
      <div class="col-md-12">
        <div class="card mb-8">
          <div class="card card-primary card-outline mb-4">
            <div class="card-header">
              <h3 class="card-title">Stok Takibi Ekle</h3>
            </div>

            <div class="card-body">
              <form method="post" asp-controller="StockTransaction" asp-action="Create" asp-antiforgery="true">
                <input type="hidden" name="ProductId" value="@Model.Id"/>

                @if (!Model.IsVarianted)
                {
                  <input type="hidden" name="ProductVariantId" value="@Model.Variants.FirstOrDefault()?.Id"/>
                }
                else
                {
                  <div class="mb-3">
                    <label for="ProductVariantId" class="form-label">Varyant</label>
                    <select class="form-select" name="ProductVariantId" id="ProductVariantId">
                      @foreach (var variant in Model.Variants)
                      {
                        <option value="@variant.Id">@variant.SkuNumber - Fiyat: @variant.Price -
                          Özellikler: @string.Join(", ", variant.OptionValueIds)</option>
                      }
                    </select>
                  </div>
                }

                <!--begin::Body-->
                <div class="card-body">
                  <div class="mb-3">
                    <label for="Change" class="form-label">Değişim</label>
                    <input
                      type="number"
                      name="Change"
                      class="form-control"
                      id="Change"/>
                  </div>

                  <div class="mb-3">
                    <label for="TransactionDate" class="form-label">Tarih</label>
                    <input
                      type="date"
                      name="TransactionDate"
                      class="form-control"
                      id="TransactionDate"/>
                  </div>

                  <div class="mb-3">
                    <label for="TransactionType" class="form-label">Tür</label>
                    <select class="form-select" name="TransactionType" id="TransactionType">
                      <option value="1">Satın Alma</option>
                      <option value="2">İade</option>
                      <option value="3">Stok Düzeltme</option>
                      <option value="4">Transfer</option>
                    </select>
                  </div>

                  <div class="mb-3">
                    <label for="Description" class="form-label">Açıklama</label>
                    <textarea class="form-control" name="Description" id="Description"></textarea>
                  </div>
                </div>
                <!--end::Body-->
                <!--begin::Footer-->
                <div class="card-footer">
                  <button type="submit" class="btn btn-primary">Gönder</button>
                </div>
                <!--end::Footer-->
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="row mt-3">
      <div class="col-md-12">
        <div class="card mb-8">
          <div class="card card-primary card-outline mb-4">
            <div class="card-header">
              <h3 class="card-title">İncelemeler</h3>
            </div>

            <div class="card-body">
              <table class="table table-bordered">
                <thead>
                <tr>
                  <th style="width: 10px">#</th>
                  <th>Kullanıcı</th>
                  <th>Oylama</th>
                  <th>İnceleme Özeti</th>
                  <th style="width: 80px">İşlemler</th>
                </tr>
                </thead>
                <tbody>

                @foreach (var review in Model.ProductReviews)
                {
                  <tr class="align-middle">
                    <td>@review.Id</td>
                    <td>@review.User.FullName</td>
                    <td>@review.Rating</td>
                    <td>@review.Text.Substring(0, Math.Min(review.Text.Length, 50))</td>
                    <td>
                      <p class="d-inline-flex gap-1">
                        <a type="submit" asp-controller="Product" asp-action="DeleteReview" asp-route-id="@review.Id"
                           class="btn btn-sm btn-danger">Sil</a>
                      </p>
                    </td>
                  </tr>
                }
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
    <!--end::Row-->
  </div>
  <!--end::Container-->
</div>

<script>
  function setMainHiddenFieldsFor(file, dz) {
    const hExisting = document.getElementById("MainExistingImageId");
    const hNew = document.getElementById("MainNewFileIndex");
    hExisting.value = "";
    hNew.value = "";

    if (file.isMock && file.dbId) {
      hExisting.value = file.dbId;
    } else {
      const newFiles = dz.files.filter(f => !f.isMock);
      const newIndex = newFiles.indexOf(file);
      if (newIndex >= 0) hNew.value = newIndex;
    }

    console.log("MainExistingImageId: " + hExisting.value);
    console.log("MainNewFileIndex: " + hNew.value);
  }

  Dropzone.autoDiscover = false;
  var realInput = document.getElementById("realFileInput");

  var myDropzone = new Dropzone("#dropzone", {
    url: "#",
    autoProcessQueue: false,
    clickable: true,
    addRemoveLinks: true,
    previewsContainer: "#dropzone",
    init: function () {
      var dz = this;

      dz.on("addedfile", function (file) {
        var btn = Dropzone.createElement("<button type='button' class='btn-main'>Ana Resim Yap</button>");
        btn.addEventListener("click", function (e) {
          e.preventDefault();
          document.querySelectorAll(".dz-preview").forEach(p => p.classList.remove("main-selected"));
          file.previewElement.classList.add("main-selected");
          setMainHiddenFieldsFor(file, dz);
        });
        file.previewElement.appendChild(btn);
      });

      dz.on("addedfile", function (file) {
        let dt = new DataTransfer();
        Array.from(realInput.files).forEach(f => dt.items.add(f));
        if (!(file.isMock)) {
          dt.items.add(file);
        }
        realInput.files = dt.files;
      });

      dz.on("removedfile", function (file) {
        let dt = new DataTransfer();
        Array.from(realInput.files)
          .filter(f => f.name !== file.name)
          .forEach(f => dt.items.add(f));
        realInput.files = dt.files;

        if (file.isMock && file.dbId) {
          console.log(file.dbId);
          let deletedInput = document.createElement("input");
          deletedInput.type = "hidden";
          deletedInput.name = "DeletedImageIds";
          deletedInput.value = file.dbId;
          document.getElementById("myForm").appendChild(deletedInput);
        }
      });
      @{
        JsonSerializerOptions jsonOptions = new()
        {
          ReferenceHandler = ReferenceHandler.IgnoreCycles,
          WriteIndented = true,
        };
        var request = Context.Request;
        var baseUri = $"{request.Scheme}://{request.Host}{request.PathBase}";
      }

      var existingImages = @Html.Raw(JsonSerializer.Serialize(
                             Model.ProductImages.Select(x => new
                             {
                               FileName = x.ImageUrl,
                               Url = baseUri + x.ImageUrl,
                               Size = 12345,
                               IsMain = x.IsMain,
                               Id = x.Id,
                             })
                           ));

      console.log(existingImages);
      existingImages.forEach(function (img, index) {
        var mockFile = {name: img.FileName, size: img.Size, isMock: true, dbId: img.Id};
        dz.emit("addedfile", mockFile);
        dz.emit("thumbnail", mockFile, img.Url);
        dz.emit("complete", mockFile);
        if (img.IsMain) {
          mockFile.previewElement.classList.add("main-selected");
        }
        dz.files.push(mockFile);
      });
    }
  });
</script>

<script>
  let variantIndex = @Model.Variants.Count;

  function reindexVariants() {
    document.querySelectorAll("#variantContainer .variant-block").forEach((block, i) => {
      block.dataset.index = i;

      block.querySelector(".variant-sku").name = `Variants[${i}].SkuNumber`;
      block.querySelector(".variant-price").name = `Variants[${i}].Price`;
      block.querySelector(".variant-stock").name = `Variants[${i}].Stock`;

      block.querySelectorAll(".option-block select").forEach((select, j) => {
        select.name = `Variants[${i}].OptionValueIds[${j}]`;
      });
    });

    variantIndex = document.querySelectorAll("#variantContainer .variant-block").length;
  }

  document.getElementById("addVariantBtn").addEventListener("click", () => {
    const template = document.getElementById("variantTemplate").content.cloneNode(true);
    const variantBlock = template.querySelector(".variant-block");
    variantBlock.dataset.index = variantIndex;

    variantBlock.querySelector(".variant-sku").name = `Variants[${variantIndex}].SkuNumber`;
    variantBlock.querySelector(".variant-price").name = `Variants[${variantIndex}].Price`;
    variantBlock.querySelector(".variant-stock").name = `Variants[${variantIndex}].Stock`;

    document.getElementById("variantContainer").appendChild(template);
    variantIndex++;
  });

  document.getElementById("variantContainer").addEventListener("click", function (e) {
    if (e.target.classList.contains("remove-variant")) {
      e.target.closest(".variant-block").remove();
      reindexVariants();
    }

    if (e.target.classList.contains("add-option")) {
      const variantBlock = e.target.closest(".variant-block");
      const optionIndex = variantBlock.querySelectorAll(".option-block").length;
      const optionTemplate = document.getElementById("optionTemplate").content.cloneNode(true);
      const select = optionTemplate.querySelector("select");
      const vIndex = variantBlock.dataset.index;
      select.name = `Variants[${vIndex}].OptionValueIds[${optionIndex}]`;
      variantBlock.querySelector(".options-container").appendChild(optionTemplate);
    }

    if (e.target.classList.contains("remove-option")) {
      e.target.closest(".option-block").remove();
      reindexVariants();
    }
  });
</script>