@using mvc_proje.Application.Dtos.Admin.Category
@using mvc_proje.Domain.Entities
@model mvc_proje.Application.Dtos.Admin.Product.ProductCreateDto
@{
    Layout = "_AdminLayout";
    var options = ViewData["ProductOptions"] as List<ProductOption>;
}

@await Html.PartialAsync("_Editor")

<style>
    .main-selected {
        border: 3px solid green;
    }

    .btn-main {
        display: block;
        margin-top: 5px;
        background: orange;
        color: white;
        border: none;
        padding: 3px 8px;
        cursor: pointer;
    }
</style>

<!--end::App Content Header-->
<!--begin::App Content-->
<div class="app-content">
    <!--begin::Container-->
    <div class="container-fluid">
        <!--begin::Row-->
        <div class="row">
            <div class="col-md-12">
                <div class="card mb-8">
                    <div class="card card-primary card-outline mb-4">
                        <!--begin::Form-->
                        <form method="post" asp-action="Create" asp-controller="Product" asp-antiforgery="true"
                              enctype="multipart/form-data">
                            <!--begin::Body-->
                            <div class="card-body">
                                <div class="mb-3">
                                    <label for="name" class="form-label">İsim</label>
                                    <input
                                        type="text"
                                        name="name"
                                        class="form-control"
                                        id="name"/>
                                </div>
                                
                                <div class="mb-3">
                                    <label for="slug" class="form-label">Slug</label>
                                    <input
                                        type="text"
                                        name="slug"
                                        class="form-control"
                                        id="slug"/>
                                </div>
                                
                                <div class="mb-3">
                                    <label for="description" class="form-label">Açıklama</label>
                                    <textarea class="form-control" name="description" id="description"></textarea>
                                </div>

                                <div class="mb-3">
                                    <label for="summernote" class="form-label">İçerik</label>
                                    <textarea class="form-control" name="content" id="summernote"></textarea>
                                </div>

                                <div class="mb-3">
                                    <label for="CategoryId" class="form-label">Kategori</label>
                                    <select class="form-select" name="CategoryId" id="CategoryId"
                                            aria-label="Default select example">
                                        @foreach (var category in (ViewData["categories"] as CategoryIndexDto).Categories)
                                        {
                                            <option value="@category.Id">@category.Name</option>
                                        }
                                    </select>
                                </div>

                                <input type="file" id="realFileInput" name="files" multiple hidden />

                                <input type="hidden" id="mainImageIndex" name="MainImageIndex" value=""/>
                                <div id="dropzone" class="dropzone"></div>
                                
                                <div class="form-check mb-3">
                                    <input asp-for="HasVariants" class="form-check-input" type="checkbox" id="hasVariants">
                                    <label class="form-check-label" for="hasVariants">
                                        Varyantlı mı?
                                    </label>
                                </div>
                                
                                <div id="singleProductFields">
                                    <div class="mb-3">
                                        <label for="SingleSkuNumber" class="form-label">SKU</label>
                                        <input type="text" class="form-control" name="SkuNumber" id="SingleSkuNumber" />
                                    </div>
                                    <div class="mb-3">
                                        <label for="SinglePrice" class="form-label">Fiyat</label>
                                        <input type="text" class="form-control" name="Price" id="SinglePrice" />
                                    </div>
                                    <div class="mb-3">
                                        <label for="SingleStock" class="form-label">Stok</label>
                                        <input type="number" class="form-control" name="Stock" id="SingleStock" />
                                    </div>
                                </div>
                                
                                <div id="variantSection" style="display:none;">
                                    <div id="variantContainer"></div>
                                    <button type="button" id="addVariantBtn" class="btn btn-secondary mt-2">Varyant Ekle</button>
                                </div>

                                <template id="variantTemplate">
                                    <div class="variant-block border p-3 mb-3" data-index="">
                                        <button type="button" class="btn-close float-end remove-variant"></button>
                                        <div class="mb-2">
                                            <label>SKU</label>
                                            <input type="text" class="form-control variant-sku" name="" />
                                        </div>
                                        <div class="mb-2">
                                            <label>Fiyat</label>
                                            <input type="text" class="form-control variant-price" name="" />
                                        </div>
                                        <div class="mb-2">
                                            <label>Stok</label>
                                            <input type="number" class="form-control variant-stock" name="" />
                                        </div>
                                        <div class="options-container"></div>
                                        <button type="button" class="btn btn-sm btn-outline-primary add-option">Option Ekle</button>
                                    </div>
                                </template>

                                <template id="optionTemplate">
                                    <div class="option-block mb-2">
                                        <button type="button" class="btn-close float-end remove-option"></button>
                                        <select class="form-select option-select" name="">
                                            <option value="">Seçiniz</option>
                                            @foreach(var option in options)
                                            {
                                                <optgroup label="@option.Name">
                                                    @foreach(var val in option.Values)
                                                    {
                                                        <option value="@val.Id">@val.Value</option>
                                                    }
                                                </optgroup>
                                            }
                                        </select>
                                    </div>
                                </template>
                            </div>
                            <!--end::Body-->
                            <!--begin::Footer-->
                            <div class="card-footer">
                                <button type="submit" class="btn btn-primary">Gönder</button>
                            </div>
                            <!--end::Footer-->
                        </form>
                        <!--end::Form-->
                    </div>
                </div>
            </div>
        </div>
        <!--end::Row-->
    </div>
    <!--end::Container-->
</div>

<script>
Dropzone.autoDiscover = false;

var realInput = document.getElementById("realFileInput");

var myDropzone = new Dropzone("#dropzone", {
    url: "#", // Gerçekte kullanılmayacak
    autoProcessQueue: false,
    clickable: true,
    addRemoveLinks: true,
    previewsContainer: "#dropzone",
    init: function () {
        var dz = this;

        dz.on("addedfile", function (file) {
            // Ana resim seçme butonu
            var btn = Dropzone.createElement("<button type='button' class='btn-main'>Ana Resim Yap</button>");
            btn.addEventListener("click", function (e) {
                e.preventDefault();
                document.getElementById("mainImageIndex").value = dz.files.indexOf(file);
                document.querySelectorAll(".dz-preview").forEach(p => p.classList.remove("main-selected"));
                file.previewElement.classList.add("main-selected");
            });
            file.previewElement.appendChild(btn);
        });

        // Dropzone'a dosya eklendiğinde gerçek input'a da ekle
        dz.on("addedfile", function(file) {
            // FileList append edilemez, bu yüzden DataTransfer ile yeni liste oluşturacağız
            let dt = new DataTransfer();
            // Önce var olan dosyaları ekle
            Array.from(realInput.files).forEach(f => dt.items.add(f));
            // Yeni dosyayı ekle
            dt.items.add(file);
            // Input'a ata
            realInput.files = dt.files;
        });

        // Dropzone'dan dosya silinirse gerçek input'tan da sil
        dz.on("removedfile", function(file) {
            let dt = new DataTransfer();
            Array.from(realInput.files)
                 .filter(f => f.name !== file.name)
                 .forEach(f => dt.items.add(f));
            realInput.files = dt.files;
        });
    }
});
</script>

<script>
    let variantIndex = 0;

    document.getElementById("addVariantBtn").addEventListener("click", () => {
        const template = document.getElementById("variantTemplate").content.cloneNode(true);
        const variantBlock = template.querySelector(".variant-block");
        variantBlock.dataset.index = variantIndex;

        variantBlock.querySelector(".variant-sku").name = `Variants[${variantIndex}].SkuNumber`;
        variantBlock.querySelector(".variant-price").name = `Variants[${variantIndex}].Price`;
        variantBlock.querySelector(".variant-stock").name = `Variants[${variantIndex}].Stock`;

        document.getElementById("variantContainer").appendChild(template);
        variantIndex++;
    });

    document.getElementById("variantContainer").addEventListener("click", function(e){
        if(e.target.classList.contains("remove-variant")){
            e.target.closest(".variant-block").remove();
        }

        if(e.target.classList.contains("add-option")){
            const variantBlock = e.target.closest(".variant-block");
            const optionIndex = variantBlock.querySelectorAll(".option-block").length;
            const optionTemplate = document.getElementById("optionTemplate").content.cloneNode(true);
            const select = optionTemplate.querySelector("select");
            const vIndex = variantBlock.dataset.index;
            select.name = `Variants[${vIndex}].OptionValueIds[${optionIndex}]`;
            variantBlock.querySelector(".options-container").appendChild(optionTemplate);
        }

        if(e.target.classList.contains("remove-option")) {
            e.target.closest(".option-block").remove();
        }
    });
</script>

<script>
    const hasVariants = document.getElementById("hasVariants");
    const singleFields = document.getElementById("singleProductFields");
    const variantSection = document.getElementById("variantSection");

    function toggleVariantFields() {
        if (hasVariants.checked) {
            singleFields.style.display = "none";
            variantSection.style.display = "block";
        } else {
            singleFields.style.display = "block";
            variantSection.style.display = "none";
        }
    }

    hasVariants.addEventListener("change", toggleVariantFields);

    toggleVariantFields();
</script>